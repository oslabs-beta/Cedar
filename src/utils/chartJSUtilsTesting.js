mapDatatoTimestamps = ({ timestamps, values }, targetTimestamps) => {
  let rawDataPointer = timestamps.length - 1;
  return targetTimestamps.map((targetTimestamp, i) => {
    let dataSum = 0;
    while (
      Date.parse(timestamps[rawDataPointer]) >= targetTimestamp &&
      i < targetTimestamps.length &&
      Date.parse(timestamps[rawDataPointer]) < targetTimestamps[i + 1] &&
      rawDataPointer >= 0
    ) {
      dataSum += values[rawDataPointer];
      rawDataPointer--;
    }
    return dataSum;
  })
}

/** TESTING */
function runMapDataTest(testInfo) {
  console.log('~~~~~RUNNING TEST FOR mapDatatoTimestamps~~~~~');
  let allPassed = true;
  testInfo.forEach(test => {
    const actualOutput = mapDatatoTimestamps(test.rawData, test.targetTimestamps);
    if (JSON.stringify(actualOutput) !== JSON.stringify(test.expectedOutput)) {
      allPassed = false;
      console.log('Test Failed');
      console.log(`Expected: ${test.expectedOutput}`);
      console.log(`Received: ${actualOutput}`);
    }
  })
  if (allPassed) console.log('all tests passed');
}

const mapDataTestInfo = [
  {
    rawData: {
      timestamps: ['2022-05-09T21:28:00.000Z'],
      values: [3],
    },
    targetTimestamps: [1652112000000, 1652115600000, 1652119200000, 1652122800000, 1652126400000, 1652130000000, 1652133600000, 1652137200000, 1652140800000, 1652144400000, 1652148000000, 1652151600000, 1652155200000, 1652158800000, 1652162400000, 1652166000000, 1652169600000, 1652173200000, 1652176800000, 1652180400000, 1652184000000, 1652187600000, 1652191200000, 1652194800000, 1652198400000, 1652202000000, 1652205600000, 1652209200000, 1652212800000, 1652216400000, 1652220000000, 1652223600000, 1652227200000, 1652230800000, 1652234400000, 1652238000000, 1652241600000, 1652245200000, 1652248800000, 1652252400000, 1652256000000, 1652259600000, 1652263200000, 1652266800000, 1652270400000, 1652274000000, 1652277600000, 1652281200000, 1652284800000, 1652288400000, 1652292000000, 1652295600000, 1652299200000, 1652302800000, 1652306400000, 1652310000000, 1652313600000, 1652317200000, 1652320800000, 1652324400000, 1652328000000, 1652331600000, 1652335200000, 1652338800000, 1652342400000, 1652346000000, 1652349600000, 1652353200000, 1652356800000, 1652360400000, 1652364000000, 1652367600000, 1652371200000],
    expectedOutput: [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  },
  {
    rawData: {
      timestamps: ['2022-05-09T23:11:00.000Z', '2022-05-09T23:09:00.000Z', '2022-05-09T21:25:00.000Z', '2022-05-09T21:24:00.000Z'],
      values: [2, 1, 2, 1],
    },
    targetTimestamps: [1652112000000, 1652115600000, 1652119200000, 1652122800000, 1652126400000, 1652130000000, 1652133600000, 1652137200000, 1652140800000, 1652144400000, 1652148000000, 1652151600000, 1652155200000, 1652158800000, 1652162400000, 1652166000000, 1652169600000, 1652173200000, 1652176800000, 1652180400000, 1652184000000, 1652187600000, 1652191200000, 1652194800000, 1652198400000, 1652202000000, 1652205600000, 1652209200000, 1652212800000, 1652216400000, 1652220000000, 1652223600000, 1652227200000, 1652230800000, 1652234400000, 1652238000000, 1652241600000, 1652245200000, 1652248800000, 1652252400000, 1652256000000, 1652259600000, 1652263200000, 1652266800000, 1652270400000, 1652274000000, 1652277600000, 1652281200000, 1652284800000, 1652288400000, 1652292000000, 1652295600000, 1652299200000, 1652302800000, 1652306400000, 1652310000000, 1652313600000, 1652317200000, 1652320800000, 1652324400000, 1652328000000, 1652331600000, 1652335200000, 1652338800000, 1652342400000, 1652346000000, 1652349600000, 1652353200000, 1652356800000, 1652360400000, 1652364000000, 1652367600000, 1652371200000],
    expectedOutput: [0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  },
  {
    rawData: {
      timestamps: ['2022-05-10T00:06:00.000Z', '2022-05-09T21:25:00.000Z'],
      values: [3, 3],
    },
    targetTimestamps: [1652112000000, 1652115600000, 1652119200000, 1652122800000, 1652126400000, 1652130000000, 1652133600000, 1652137200000, 1652140800000, 1652144400000, 1652148000000, 1652151600000, 1652155200000, 1652158800000, 1652162400000, 1652166000000, 1652169600000, 1652173200000, 1652176800000, 1652180400000, 1652184000000, 1652187600000, 1652191200000, 1652194800000, 1652198400000, 1652202000000, 1652205600000, 1652209200000, 1652212800000, 1652216400000, 1652220000000, 1652223600000, 1652227200000, 1652230800000, 1652234400000, 1652238000000, 1652241600000, 1652245200000, 1652248800000, 1652252400000, 1652256000000, 1652259600000, 1652263200000, 1652266800000, 1652270400000, 1652274000000, 1652277600000, 1652281200000, 1652284800000, 1652288400000, 1652292000000, 1652295600000, 1652299200000, 1652302800000, 1652306400000, 1652310000000, 1652313600000, 1652317200000, 1652320800000, 1652324400000, 1652328000000, 1652331600000, 1652335200000, 1652338800000, 1652342400000, 1652346000000, 1652349600000, 1652353200000, 1652356800000, 1652360400000, 1652364000000, 1652367600000, 1652371200000],
    expectedOutput: [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  },
  {
    rawData: {
      timestamps: ['2022-05-09T23:11:00.000Z', '2022-05-09T23:09:00.000Z', '2022-05-09T21:25:00.000Z', '2022-05-09T21:24:00.000Z'],
      values: [0, 1, 0, 0],
    },
    targetTimestamps: [1652112000000, 1652115600000, 1652119200000, 1652122800000, 1652126400000, 1652130000000, 1652133600000, 1652137200000, 1652140800000, 1652144400000, 1652148000000, 1652151600000, 1652155200000, 1652158800000, 1652162400000, 1652166000000, 1652169600000, 1652173200000, 1652176800000, 1652180400000, 1652184000000, 1652187600000, 1652191200000, 1652194800000, 1652198400000, 1652202000000, 1652205600000, 1652209200000, 1652212800000, 1652216400000, 1652220000000, 1652223600000, 1652227200000, 1652230800000, 1652234400000, 1652238000000, 1652241600000, 1652245200000, 1652248800000, 1652252400000, 1652256000000, 1652259600000, 1652263200000, 1652266800000, 1652270400000, 1652274000000, 1652277600000, 1652281200000, 1652284800000, 1652288400000, 1652292000000, 1652295600000, 1652299200000, 1652302800000, 1652306400000, 1652310000000, 1652313600000, 1652317200000, 1652320800000, 1652324400000, 1652328000000, 1652331600000, 1652335200000, 1652338800000, 1652342400000, 1652346000000, 1652349600000, 1652353200000, 1652356800000, 1652360400000, 1652364000000, 1652367600000, 1652371200000],
    expectedOutput: [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  },
  {
    rawData: {
      timestamps: [
        "2022-05-09T23:11:00.000Z",
        "2022-05-09T23:09:00.000Z",
        "2022-05-09T21:25:00.000Z",
        "2022-05-09T21:24:00.000Z",
        "2022-05-05T20:31:00.000Z",
        "2022-05-05T19:38:00.000Z",
        "2022-05-05T19:34:00.000Z",
        "2022-05-05T19:33:00.000Z",
        "2022-05-04T19:51:00.000Z",
        "2022-05-03T20:43:00.000Z",
        "2022-05-03T20:33:00.000Z",
        "2022-05-03T20:32:00.000Z",
        "2022-05-03T20:26:00.000Z",
        "2022-05-03T20:25:00.000Z",
        "2022-05-03T19:47:00.000Z",
        "2022-05-03T16:18:00.000Z"
    ],
      values: [2, 1, 2, 1, 1, 2, 2, 1, 5, 1, 2, 1, 1, 1, 1, 1],
    },
    targetTimestamps: [1651104000000, 1651190400000, 1651276800000, 1651363200000, 1651449600000, 1651536000000, 1651622400000, 1651708800000, 1651795200000, 1651881600000, 1651968000000, 1652054400000, 1652140800000, 1652227200000, 1652313600000],
    expectedOutput: [0, 0, 0, 0, 0, 8, 5, 6, 0, 0, 0, 6, 0, 0, 0],
  },
  {
    rawData: {
      timestamps: [
        "2022-05-10T00:06:00.000Z",
        "2022-05-09T21:25:00.000Z",
        "2022-05-05T19:35:00.000Z",
        "2022-05-05T19:34:00.000Z",
        "2022-05-04T19:52:00.000Z",
        "2022-05-03T19:47:00.000Z",
        "2022-05-03T15:23:00.000Z",
        "2022-05-03T15:22:00.000Z",
        "2022-05-03T15:20:00.000Z"
    ],
      values: [3, 3, 1, 3, 3, 1, 2, 2, 1],
    },
    targetTimestamps: [1651104000000, 1651190400000, 1651276800000, 1651363200000, 1651449600000, 1651536000000, 1651622400000, 1651708800000, 1651795200000, 1651881600000, 1651968000000, 1652054400000, 1652140800000, 1652227200000, 1652313600000],
    expectedOutput: [0, 0, 0, 0, 0, 6, 3, 4, 0, 0, 0, 3, 3, 0, 0],
  },
  {
    rawData: {
      timestamps: ['2022-05-09T21:28:00.000Z', '2022-05-05T19:38:00.000Z', '2022-05-04T14:37:00.000Z', '2022-05-03T19:49:00.000Z'],
      values: [3, 2, 2, 1],
    },
    targetTimestamps: [1651104000000, 1651190400000, 1651276800000, 1651363200000, 1651449600000, 1651536000000, 1651622400000, 1651708800000, 1651795200000, 1651881600000, 1651968000000, 1652054400000, 1652140800000, 1652227200000, 1652313600000],
    expectedOutput: [0, 0, 0, 0, 0, 1, 2, 2, 0, 0, 0, 3, 0, 0, 0],
  },
]
runMapDataTest(mapDataTestInfo);


function createDataset(funcName, color, data) {
  return {
    id: funcName,
    label: funcName,
    backgroundColor: color,
    borderColor: color,
    data: data
  }
}

function runCreateDatasetTest(testInfo) {
  console.log('~~~~~RUNNING TEST FOR createDatasets~~~~~');
  let allPassed = true;
  testInfo.forEach(test => {
    const actualOutput = createDataset(test.funcName, test.color, test.data);
    if (JSON.stringify(actualOutput) !== JSON.stringify(test.expectedOutput)) {
      allPassed = false;
      console.log('Test Failed');
      console.log(`Expected: `, test.expectedOutput);
      console.log(`Received: `, actualOutput);
    }
  })
  if (allPassed) console.log('all tests passed');
}

const createDatasetData = [
  {
    funcName: 'myLoop',
    color: 'blue',
    data: [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    expectedOutput: {
      id: 'myLoop',
      label: 'myLoop', 
      backgroundColor: 'blue',
      borderColor: 'blue',
      data: [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    }
  },
  {
    funcName: 'sendEmail',
    color: 'green',
    data: [0, 0, 0, 0, 0, 6, 3, 4, 0, 0, 0, 3, 3, 0, 0],
    expectedOutput: {
      id: 'sendEmail',
      label: 'sendEmail', 
      backgroundColor: 'green',
      borderColor: 'green',
      data: [0, 0, 0, 0, 0, 6, 3, 4, 0, 0, 0, 3, 3, 0, 0],
    }
  },
  {
    funcName: 'updateDB',
    color: 'red',
    data: [0, 0, 0, 0, 0, 8, 5, 6, 0, 0, 0, 6, 0, 0, 0],
    expectedOutput: {
      id: 'updateDB',
      label: 'updateDB', 
      backgroundColor: 'red',
      borderColor: 'red',
      data: [0, 0, 0, 0, 0, 8, 5, 6, 0, 0, 0, 6, 0, 0, 0]
    }
  }
]

runCreateDatasetTest(createDatasetData);

function prepLineGraphProps(title, xUnit, xMin, yMin, labels, datasets) {
  return {
    title,
    xUnit,
    xMin,
    yMin,
    labels,
    datasets 
  }
}

function runPrepLineGraphPropsTest(testInfo) {
  console.log('~~~~~RUNNING TEST FOR prepLineGraphProps~~~~~');
  let allPassed = true;
  testInfo.forEach(test => {
    const actualOutput = prepLineGraphProps(test.funcName, test.color, test.data);
    if (JSON.stringify(actualOutput) !== JSON.stringify(test.expectedOutput)) {
      allPassed = false;
      console.log('Test Failed');
      console.log(`Expected: `, test.expectedOutput);
      console.log(`Received: `, actualOutput);
    }
  })
  if (allPassed) console.log('all tests passed');
}

const prepLineGraphPropsData = [
  {
    metricName: 'Invocations',
    unitName: 'minute',
    firstTimeStamp: Date.now() - 1000*60*60,
    yMin: 0,
    timestamps: [1651104000000, 1651190400000, 1651276800000, 1651363200000, 1651449600000, 1651536000000, 1651622400000, 1651708800000, 1651795200000, 1651881600000, 1651968000000, 1652054400000, 1652140800000, 1652227200000, 1652313600000],
    functions: [
      {
        id: 'updateDB',
        label: 'updateDB', 
        backgroundColor: 'red',
        borderColor: 'red',
        data: [0, 0, 0, 0, 0, 8, 5, 6, 0, 0, 0, 6, 0, 0, 0]
      },
      {
        id: 'sendEmail',
        label: 'sendEmail', 
        backgroundColor: 'green',
        borderColor: 'green',
        data: [0, 0, 0, 0, 0, 6, 3, 4, 0, 0, 0, 3, 3, 0, 0],
      }
    ],
    expecte
  },
  {
    metricName: 'Errors',
    unitName: 'hour',
    firstTimeStamp: Date.now() - 1000*60*60*24,
    yMin: 0,
    timestamps: [1652112000000, 1652115600000, 1652119200000, 1652122800000, 1652126400000, 1652130000000, 1652133600000, 1652137200000, 1652140800000, 1652144400000, 1652148000000, 1652151600000, 1652155200000, 1652158800000, 1652162400000, 1652166000000, 1652169600000, 1652173200000, 1652176800000, 1652180400000, 1652184000000, 1652187600000, 1652191200000, 1652194800000, 1652198400000, 1652202000000, 1652205600000, 1652209200000, 1652212800000, 1652216400000, 1652220000000, 1652223600000, 1652227200000, 1652230800000, 1652234400000, 1652238000000, 1652241600000, 1652245200000, 1652248800000, 1652252400000, 1652256000000, 1652259600000, 1652263200000, 1652266800000, 1652270400000, 1652274000000, 1652277600000, 1652281200000, 1652284800000, 1652288400000, 1652292000000, 1652295600000, 1652299200000, 1652302800000, 1652306400000, 1652310000000, 1652313600000, 1652317200000, 1652320800000, 1652324400000, 1652328000000, 1652331600000, 1652335200000, 1652338800000, 1652342400000, 1652346000000, 1652349600000, 1652353200000, 1652356800000, 1652360400000, 1652364000000, 1652367600000, 1652371200000],
    functions: [
      {
        id: 'myLoop',
        label: 'myLoop', 
        backgroundColor: 'blue',
        borderColor: 'blue',
        data: [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      },
      {
        id: 'aFunc',
        label: 'aFunc', 
        backgroundColor: 'purple',
        borderColor: 'purple',
        data: [0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      }
    ]
  }
]
